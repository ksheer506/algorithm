function solution(n) {
  const ternary = n.toString(3).split();
  let res = ternary;
  
  for (let i = 0; i < ternary.length; i++) {
    
  }
  
  return ternary.replace(/[12]/g, (m) => m * 2);
}
console.log('3'-1)
/* 
3진법으로 변환 후 맨 앞자리부터 1을 빼서 
뒷자리로 3을 넘김
(1) 넘겼을 때 4가 넘으면(1, 2이면) 넘기지 않고 
다음 자릿수로 바로 넘어가서 동일한 작업 반복
(2) 3이하면 3을 넘기고 다음 자릿수로 넘어가서 동일한 작업 반복
*/
// 8 = 22 = 2*3 + 2
// 9 = 24 = 2*3 + 3
// 10 = 41 = 1*3^2 + 1 = 3*3 + 1
// 13 = 111 = 1*3^2 + 1*3 + 1
/*
14 = 112
15 = 114
16 = 121 
17 122 18 124 19 141 20 142 21 144 22 211 23 212 
24 214 25 221 26 222 27 224

= a*3^n + b*3^(n-1) + ... x*3^2 + y*3 + z
a, b, ..., z는 0~2이기 때문에 앞 자리에서 1을 넘겨받아도 3을 넘지는 않음
27 = 1*3^3 = 0*3^3 + 3*3^2 = 2*3^2 + 2*3 + 3
= 1000 -> 0300 -> 0230 ->  0223

20 = 2*3^2 + 2
= 202 -> '132' -> 125 (x)
26 = 2*3^2 + 2*3 + 2
= '222' -> 152(x) -> 215(x)
*/